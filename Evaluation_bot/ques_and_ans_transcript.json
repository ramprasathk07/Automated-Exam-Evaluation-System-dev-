"##  Evaluation of Student's Answers:\n\n**Question 1** (Total Marks: 2):\n- **Question**: List out any four characteristics of embedded system. \n- **Student Answer**: 1) Programmed to do certain actions.\n     2) 1 MHZ - 300 MHZ of speed.\n     3) Does lightweight tasks \n     -> these run on high level programming language like C, C++.\\n-> there are desgned to run complex codes & produce a throughput\n     -> these core built with a idea in mind for pft to solve any given task rather than changing to a predefined set of Apllna try \n     -> these devices are not inside the microprocessor\n     -> there are some where on the chip/motherboard which are connected w/a a universal bus.\n     -> this makes them much effirent & easily executable.\n     -> the speed vary from 1 GHz to 4 GHz (as of now) (without overclocking)\n     -> Has RAM upto 124 GB 64 + GiB.\n\n**Question 2** (Total Marks: 2):\n- **Question**: Develop a basic Embedded C program and define the sections. \n- **Student Answer**: #include <LPC 21xx.h>  <-- Library \n      int main () {\\n         <-- main function\\n        pnt a = 0 ;        <-- variable of type pnt \\n        return a;         <-- returning variable.\\n\nEmbedded - C\n#include <LPC21xx.h>\npnt main() {\npnt A = 0XAF2E;\nA = (A|(1<<14))+(~(1<<22));\nreturn A;\n}\n\n**Question 3** (Total Marks: 2):\n- **Question**: Consider a variable 'A' has a data 0xAF2E. Construct an embedded C program to set the bit number 14 and to reset bit number 1. \n- **Student Answer**: A = 0XAF2E   \n           1010 1111 0010 1110\n           1st bit\n            14 bit. \n           to set 14th bit & reset 1st bit.\n            A = (A | ( 1 << 14 ) ) * ( ! ( 1 << 2 ) )\n\n**Question 4** (Total Marks: 2):\n- **Question**: Variable 'X' has an initial data of 0x12EFA. It was undergone two different operations in which the output of the 1st operation is 0xEFA12 and 2nd operation is 0x2EFA0. Find out the operations. \n- **Student Answer**: X = 0x12EFA\non first operation it becomes \n0X EFA12\nwhich is a left circular shift of 8 bits\nformula is\nA = (X << 8) | (X>>12)\ngenerally\nA = (A << x) | (A>>(N-x))\nwhere x is the shift \non second operation it becomes \n0X 2EFA0\nwhich is left shift\nX = (X << 4)\n\n**Question 5** (Total Marks: 2):\n- **Question**: Consider a variable 'Q' with a data 0xA00D. Develop a logic in Embedded C to rotate the data in 'Q' for 8-bit positions.\n- **Student Answer**: Q = 0XA000\nQ = (Q << 8) | (Q>>8)\nfor left circular\nQ = (Q>>8) | (Q<<8)\nfor right circular.\n\n**Question 6** (Total Marks: 2):\n- **Question**: Compare and contrast the granularity of FPGA logic blocks. \n- **Student Answer**: Fine granmal \n1) Simple logic\n2) used for minimum operation\n3) has 1 bit logru\n\nconv del granal\n2) complex log'c \"SASTRA\n2) Used on maximum operation.\n3) has 4 bit look up tables (LUT).\n\n**Question 7** (Total Marks: 2):\n- **Question**: Differentiate the continuous assignment and procedural assignment statements with a suitable example.\n- **Student Answer**: **D continuous assignment**\n  It's a process of assigning a value\n  continuously using functions like always\n  @posedge\n**Procedural assignment**\n  It's assigning the value\n  proc duratly using <= statements\n  used in shift regs.\n\n**Question 8** (Total Marks: 2):\n- **Question**: Develop a Verilog HDL program to design a 4:1 Multiplexer using conditional select operator. \n- **Student Answer**: 4:1 mux\na\nb\nc\nd\n                     mux\n                     y\n         s0  s1 \n\nverilog. \nmodule 4x1 mux(a,b,c,d, s, y);\n   input a, b, c, d;\n   input  reg [1:0] s; \n   output reg y;\n   always @(a,b,c,d,s);\n   begin\n     case(s):\n       2'b00:\n       pf 1'b00:\n       ay = a;\n       pf 2'b01:\n       y = b\n       pf 2'b10:\n       y=c\n       pf 2'b11:\n       y = d\n       default:\n       y=0;\n     endcase\n   end\nendmodule\n\n**Question 9** (Total Marks: 2):\n- **Question**: List any two advantages of FPGAs over Microcontrollers.\n- **Student Answer**: LEGA2 are more  \nenergy efficient than  micro on rollers SASTRA\n\n**Question 10** (Total Marks: 2):\n- **Question**: Consider the statement assign k4 = {b, a, 2'b1010}; c1 from Verilog HDL. Assume a = 4'b0001, b = 4'b1010, c = 4'b1111. Find the value of k4 and its bit-depth. \n- **Student Answer**: k = lb, a, 2'3'b1013 (c);\n\n b = 4'b1010\n\n a = 4'b0001\n\n c = 4'b1111\n\n  2'3'b1013 = 101101\n\n k = 1010000 110101111;\n\n**Question 11** (Total Marks: 2):\n- **Question**: Compare and contrast the Microprocessor and FPGA with respect to its architecture and operations. \n- **Student Answer**: **FP GA:**\nThe image shows a square with multiple squares arranged along its periphery.\n-> FPGA are a type of micro controller\n-> this has 32 pins each having its own function. \n- these FPGA are designed for certain predefined task.\n- they have an embedded chip, which can be programmed.\n- the chip can be programmed to the users need. A  It will perform only that.\n- the FPGA chips are versa tile & resultant they produce an high throughput + are faster comparatively\n- As they only perform a set of operation.\n\n**Question 12** (Total Marks: 2):\n- **Question**: Explain the any one operator from the following categories with a suitable syntax example from Verilog HDL.\n    a. Arithmetic operators\n    b. Shifting operators\n    c. Concatenation & replication operators\n    d. Relational operators \n- **Student Answer**:  a) Arithmetic operators:  \n  these are used to perform Arithmetic  \n   operations like addition, subtraction, multiplication etc..\\n  \n  op - +, -, *, / , -1\nEx: module tadd (a,b,c);\\n  input a,b;\\n  output c;\\n  \\n  wire C = a + b; \\n\\n  end module.\\n\\n  here a + bare added + its stored on c.\n\n b) shifting operators:\n  these are used to shift the bits of  \n   an given variable.\\n  \n  op - << , >> , <<< , >>>.\nEx: module ls(a, b): \n\t  \t  input a;\n\t  \t  output b;\n\n\t  \t  assign b= a <<2;\n\n\t  \t  end module\n\n\t  \t  if a = 0x01,  ft becomes 0x04.\n\n\t  \t  c) concatenation replication operator.\n\t  \t  To concatenate any two\n\t  \t  binaries \\\"c3\\\" is used. The variables or\n\t  \t  binary inside ft is concatenated. \n\t  \t  Ex:  a = {10,10,11,01}\n\t  \t  \t      a = 1010101101 \n\n\t  \t  \t   for seplu'a from ft be fore _x3 is used \n\t  \t  \t   ex:  a = 3x10^3\n\t  \t  \t  \t   = 101010\n\n\t  \t  Venilog code: \n\n\t  \t  module concat(a, b, c): \n\t  \t  \t  input a, b;\n\t  \t  \t  output c;\n\n\t  \t  \t  assign c = {a, b, 32'b03}; \n\n\t  \t  \t  endmodule. \n\t  \t  \t  if a = 1, b=0 then c= 10000. \n\n\t  \t  d) Relational operator:\n\t  \t  \t  These are used to compare base or\n\t  \t  \t  more multiple range values.\n\t  \t  \t  >, <, <=, >=, ==, != \nSASTRA\n\nEx:\nmodule rel (a,b);\ninput a,b;\noutput c;\nPF (a > b) then\n    anc= a;\nelse \n    anc= b;\nend\nend module\nPF a = 4 b = 3 c= 4\ne) logical operation:\nThere are used for logical operation\n     ||d\n     \\u2191\\u2191 \n     and or not\nex - (a<b  at  b>c)\nwill tell in  both greater then c (a  can - the a \n\n**Question 13** (Total Marks: 10):\n- **Question**: Imagine you're part of an ancient kingdom where secure communication is vital. The kingdom's advisor has created a simple cryptosystem to encrypt messages using a secret number between 1 and 26 as Key. To encrypt a message, shift each letter forward in the alphabet by the Key. For example, if the shift is 3, 'A' becomes 'D'. If you reach the end of the alphabet, loop back to the beginning (e.g., 'Z' becomes 'C'). To decode, shift each letter backward by the same number. Consider this schema and develop Embedded C or Verilog HDL code to perform the following tasks:\n* Choose the number of digits in your University register number as secret number (Key).\n* Encode the message \"THANJAVUR BIG TEMPLE\" using your chosen Key.\n* Provide the encoded message.\n* Decode a received message back to its original form. \n* Provide the decoded message.\n- **Student Answer**: Encryption: LLPC 21AX.hy\n#include <stdio.h>\nunsigned char P[ ] = \"THANJAVUR BIG TEMPLE\";\nunsigned int k = a;\nunsigned char ct [255/8] //smc  map rs of\n\t\t\t     bytes 18\n\t\t          \t  \n\t\t          \t  \nPHt i = 0;\nfor( i = 0; i<18; i++ ) \nct[i] = ( (P[i]-0x41)+k )/26 + 0x41;\n\t\t\t     \n\t\t\t     \n\nDecryption:\n\n#include <LPC 21XX.h>\nUnsigned char c[10];\n\nint k=9;\n\nUnsigned char P[18];\n\nint p=0;\n\nfor (p=0; p<18; p++)\nx = c[c[p]] - ox41;\n\npf (x-k)<0\nc[c[p]] = c[c[p]] + 26;\n\np[p] = (c[c[p]] - ox41)-k)+26;\n\n+ox41;\n\n3\n\nDecryption logic:\n\nLet say ct = c = 67\nbutplant = z = 90, k=3\n\n.. c = 67 - 65 = 2\n\n.. c - k = -1;\n\n.. the ct = 67+26 = 93\n\nnow 93-65 = 28\n28 - k = 25\n25 + 65 = 90 = 2\nour key = 9\n\nmessage = THANJAVUR BIG TEMPLE\n\nto find the cipher message with key = 9\n\n\nA  B  C  D  E  F  G  H  I  J  K  L \n1  2  3  4  5  6  7  8  9  10  11  12\n                    S  T  U  V  SASTRA\n                     19  20  21  22\n\nM  N  O  P  Q  R\n13  14  15  16  17  18\n\nW  X  Y  Z\n23  24  25  26\n\n( 20 + 9 = 29 + 6 = 3)\n\nT+9 = COJ  ( 1 + 9 = 10)\nU+9 = W   ( 14 + 9 = 23)\nA+9 =  ( 1 + 4 + 9 = 14)\n\nN+9 = W  ( 10 + 9 = 19)\nJ+9 = S\nT+9 = 5\nA+9 = I  ( 22 + 9 = 31 + 26 = 5 )\nV+9 = E  ( 18 + 9 = 27 + 1. 263 = 1)\nU+9 = D\nR+9 = K\nB+9 = R\nI+9 = P\nG+9 = P\nT+9 = C\nE+9 = N\nM+9 = V\nP+9 = Y\nL+9 = U\nE+9 = N\n\n. the encoded message is\n\ncos WSJ EDA KRPCNY YUN.\n\nto decode we must do the opposite process\nC-9 = T  ( 3 - 9 = -6 + 26 = 20 )\nA-9 = H ( 1 + 4 + 9 = 14 )\nJ-9 = A  ( 10 - 9 = 1 )\nW-9 = N  ( 23 - 9 = 14 )\nS-9 = J  ( 19 - 9 = 10 )\nJ-9 = A  ( 10 - 9 = 1 )\nE-9 = V  ( 5 - 9 = -4 + 26\n            = 22)\n\nD-9 = U  ( 4 - 9 = -5 + 26\n             = 21)\nA-9 = R  ( 1 - 9 = -8 + 18 )\nK-9 = B  ( 11 - 9 = 2 )\nR-9 = I  ( 11 - 9 = 9 )\n\nA circle is drawn on the left hand side.  On the right hand side, vertical lines separate letters and their corresponding decoded letters.  The decoded letters are written in brackets.\n\nADDITIONAL SHEET\n\nSASTRA\nSignature of the Student\nSession Code : \nInitials of the Invigilator\n\nP - 9 = G (16 - 9 = 7 )\nC - 9 = T\nN - 9 = E\nV - 9 = M\nY - 9 = P\nU - 9 = L\nN - 9 = E\n----------\nDecoded msg = THANJA VURBIG TEMPLE\n----------\n\n**Question 14** (Total Marks: 10):\n- **Question**: Compare and contrast the Microprocessor and FPGA with respect to its architecture and operations.  \n- **Student Answer**: 11) Microprocessor :\n___________________________________________________\n            |                                               | \n            |                                               |\n   Micro      |----------------------------------------| Storage\n   Processor |                                               |\n            |                                               |\n___________________________________________________\n                       RAM                                  phouperaly \n                                                      |\n                                                      |\n                                Bus                    |\n                                                      |\n                                                      |\n                                                      |\n                                  ROM\n-> the devices are connected the the microprocessor\n   via a Bus.\n-> there devices are RAM, ROM, to dauries etc.\n-> micro processor is an deurie which doesn't\n   has multiple units to perform the task\n-> it doesn't have any specified predetermined\n   task, which it was built for.\n-> It works based on the application.\n-> There are square in shape Since they\n   have a lot of pins a for heat dissipation.\n\nThis is a diagram of the parts of a computer. The micro processor is connected to the other parts via a Bus. RAM, ROM, and storage are connected to the microprocessor through the Bus.\n"