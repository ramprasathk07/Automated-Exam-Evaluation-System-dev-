{
    "Apage_1.png": "SASTRA\n\nDEEMED TO BE UNIVERSITY\nTirumalaisamudram, Thanjavur - 613 401\n\nANSWER BOOK\n\nName : Kanishkan K \nReg. No. : 12 S15T030 - 20\nDegree & Programme : BTech CSE(CSBD) Year & Section : IVth year - H\nCourse Code : IST 409 Course Name : Embedded Sec. \nExamination : CIA 1 Date : 16/8/24\n\nSignature of Student : Kanav\nSignature of Invigilator : 10Aug16/8/24\n\na  b c Total Grand Total -\n\nBegin Answering Here\n\nPart-A\n\n1) 1) Programmed to do certain actions.\n     2) 1MHz - 300mhz of speed.\n     3) Does lightweight tasks\n     4) #include <LPC 21xx.h> <- Library\n\n2) #include <LPC 21xx.h> <- Library \n   int main ( ) { \n      <- main function\n      int a = 0; <- variable of type int\n      return a; <- returning variable.\n\n3) A = 0XAF2E \n = 1010 1111 0010 1110\n     1st bit\n   14 bit.\n   to set 14th bit & reset 1st bit.\n A= ( A | ( 1 << 14) ) * ( 1 << 2 ) )\n\nPage No. : 1",
    "Apage_2.png": "Embedded -c\n#include <LPC21xx.h>\npnt main ()\n{\npnt A = 0xAF2E;\nA = (A | (1 << 14)) + (N(1 << 22));\nreburn A;\n}\n4) x = 0x12EFA\non first operation pt becomes\n0xEFA12\nwhich is a left circular shift of 8 bits\nformula is\nx = (x << 8) | (x >> 12)\ngenerally\nA = (A << x) | (A >> (N - x))\nwhere x is the shift\non second operation it becomes\n0x2EFA0\nwhich is left shift\nx = (x << 4)\n5) Q = 0xA00D\nQ = (Q << 8) | (Q >> 8)\nfor left circular\nQ = (Q >> 8) | (Q << 8)\nfor right circular \nPage No.: 2\nSASTRA",
    "page_10.png": "- these run on high level programming language like C, C++.\n- these are designed to run complex codes & produce a throughput.\n- these core built with a idea in mind for pt to solve any given task rather than changing to a predefined set of Appln try.\n- these devices are not inside the microprocessor there are some where on the chip/motherboard which are connected w/a a universal bus.\n- this makes them much effrrent & easily executable.\n- the speed vary from 1GHZ to 4GHZ (as of now) (without overclocking)\n- Has RAM upto 128GB 64+ GIB. \n**FP GA**\n- FPGA are a type of micro controller\n- this has 32 pins each having its own function. \n\nPages No. : \n",
    "page_11.png": "ADDITIONAL SHEET\n\nSASTRA\n\nSignature of the Student\nSession Code:\nInitials of the Invigilator\n\n-These FPGA are designed for certain predefined task.\n-They have an embedded chip, which can be programmed.\n-The chip can be programmed to the users need. A IT will perform only that\n-The FPGA chips are versa tile & resultant\n-They produce an high throughput & are faster comparatively\n-As they only perform a set of operation.\n\nD. Continuous assignment:\nIt's a process of assigning a value continuously using functions like always @posedge\nProcedural assignment\nIt's assigning the value proc durably using <= statement used in shift regs\n\nPages No.:",
    "page_3.png": "6) Fine granmal\n1) Simple logic\n2) used for minimum operation\n3) has 1 bit logru\n\nconvended grannal\n2) complex logic \"SASTRA\"\n2) Used on maximum operation.\n3) has 4 bit look up tables (LUT).\n\n4:1 Mux\na\nb\nc\nd\n\nMux\n\ny\nSo, S1\n\nverilog.\nmodule 4x1 mux (a,b,c,d, s,y);\n    input a,b,c,d;\n    output reg D;\n    input output reg y;\nalways @(a,b,c,d,s);\nbegin\ncase (s):\npf 1'b00:\n    ay=a;\npf 2'b01:\n    y=b\npf 2'b10:\n    y=c\npf 2'b11:\n    y=d\ndefault:\n    y=0\nendcase\nendmodule\n\nPage No: 3",
    "page_4.png": "7)  LERGA2 are more \n     FPGAs are more  replent,\n  energy efficient then  micro controller SASTRA\n2)  k = lb, a, 2^3'b1013(c);\n  b = 4'b1010\n  a= 4'b0001\n  c= 4'b1111\n  2^3'b1011 = 101101\n  K = 1010000 1101011111;\nPart+B \n12) a) Arithmetic operators :\n          these are used to perform Arithmetic \n          operations like addition, subtraction, multiplication\n          etc.\n op- +, -, *, /, -1.\nEx: module  tadd( a,b,c) ;\n input a,b;\n output c;\n  assign  C = a+ b;\n   endmodule.\n  here  a+ bare added &  bits stored on \nc.\nb)  shifting operators :\n      these are used  to shift the bits of\n   an given variable.\nop- <<, >>, <<<, >>>,",
    "page_5.png": "Ex:\nmodule ls(a, b):\n    input a;\n    output b;\n    assign b=a+2;\nend module\nIf a = 0x01, ft becomes 0x04.\nc) Concatenation replication operator.\nTo concatenate any two binaries \u2018,\u2019 is used. The variables or binary inside ft is concatenated.\nEx:\na = {10, 10, 11, 01}\na = 1010101101\nfor sepration from ft be fore -x3 is used\nex\na=3x10^3\n= 101010\nVerilog code\nmodule concat(a,b,c):\n    input a,b;\n    output c;\n    assign c={a, b, 32'b0'b3\nend module\nIf a=1, b=0 then c=10000\nd) Relational operator:\nThese are used to compare these or more multiple range values\n>, <, <=, >=, ==, !=\nSASTRA\nPage No.: 5",
    "page_6.png": "Ex:\nmodule rel(a,b);\ninput a,b;\noutput c;\n\npf(a>b) then\n  amc=a;\nelse\n  amc=b;\nend\nend module\npf a= 4 b= 3 c= 4\n\ne) logical operation:\nthere are used for logical operation\n\n^+, ||, ~\nand or not\n\nex - (a<b ^+ b>c)\nwill tell in brs greater than (a less than a\n\n=======Encryption: LLPC 21AX. hY\n13 #include <stdio.h>\nunsigned char P[ ]=\"THANJAVUR BIGA TEMPLE\";\nunsigned int k= a;\nunsigned char ct [255/8];\nPht i=0;\n\nfor(i=0; i<18; i++, )\nct[i]=((P[i]-0x41)+k)/26+0x41;\n",
    "page_7.png": "Decryption:\n\n#include <LPC 21xx.h>\nunsigned char ct[5];\nint k = 9;\nunsigned char PC[18];\nint p = 0;\nfor (i = 0; i < 18; i++)\nx = ct[i] - ox41;\npf (x - k) = 0;\nct[i] = ct[i]\n3\nPE[i] = (ct[i] - ox41) - k) + 26]\n+ ox41;\n--------------------------\n3\ndecryption logic:\nlet say ct = c = 67\nbutplant = z = 90 , k = 3\n.. c = 67 - 65 = 2\n.. c - k = -1;\n.. the ct = 67 + 26 = 93\nnow 93 - 65 = 28\n28 - k = 25\n25 + 65 = 90 = 2\n--------------------------\nour key = 9\nmessage = THANJAVUR BIG TEMPLE\nto find the cipher message with key = 9\n\nPage No.: 7\nSASTRA",
    "page_8.png": "G H I J K L\n7 8 9 10 11 12\nS T U V SASTRA\n19 20 21 22\nA B C D E F\n1 2 3 4 5 6\nM N O P Q R\n13 14 15 16 17 18\nW X Y Z\n23 24 25 26\n( 20+9 = 29+ 6 = 3 )\nT+9 = C  ( 1+9 = 10 )\nU+9 = J ( 14+9 = 23 )\nA+9 = W ( 1+4+9 = 19 )\nN+9 = S ( 10+9 = 19 )\nJ+9 = I ( 22+9 = 31+26 = 5 )\nA+9 = E ( 22+9 = 27 + 263 = 1 )\nV+9 = D ( 18+9 = 27+ 263 = 1 )\nU+9 = A \nR+9 = K\nB+9 = R\nI+9 = P\nG+9 = P\nT+9 = C\nE+9 = N\nM+9 = V\nP+9 = Y\nL+9 = N\nE+9 = \n. the encoded message is\ncos WSJ EDA KRPCNY YUN .\nto decode we must do the opposite process\nC-9 = T ( 3-9 = 6+26 = 20 )\nA-9 = H ( (-4+5+8) -9 = 1 )\nJ-9 = A ( 10-9 = 1 )\nW-9 = N ( 23-9 = 14 )\nS-9 = J ( 19-9 = 10 )\nJ-9 = A ( 10-9 = 1 )\nE-9 = V ( 5-9 = -4+26\n= 22 )\nD-9 = U ( 4-9 = -5+26\n= 21 )\nA-9 = R ( (-1+9-9=8+18)\n= 26 )\nK-9 = B ( 11-9 = 2 )\nR-9 = I ( 11-9 = 9 )\nPage No.: 8",
    "page_9.png": "ADDITIONAL SHEET\nSASTRA \nSignature of the Student\nSession Code :\nInitials of the Invigilator\nP - 9 = G (16-9 = 7)\nC - 9 = T \nN - 9 = E\nV - 9 = M\nY - 9 = P\nU - 9 = L\nN - 9 = E\nDecode msg = THANJA VURBIG TEMPLE,\n11) Microprocessor:\nPeripheral\nRAM\nBus\nMicro\nProcessor\nStorage\nROM\n\u2192 the devices are connected the the microprocessor via a Bus\n\u2192 These devices are RAM, ROM, to davries etc.\n\u2192 microprocessor is an device which doesn't has multiple units to perform the task\n\u2192 It doesn't have any specified pre-determined task, which it was built for.\n\u2192 It works based on the application.\n\u2192 These are square in shape Since they have a lot of pins to for heat dissipation.\nPages No.:"
}